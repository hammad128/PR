@{
    ViewBag.Title = "AudienceList";
}
<style>
    .alert-info {
        color: black !important;
        background-color: #f4f4f4 !important;
        border-color: #f4f4f4 !important;
        text-align: center;
        height: 45px !important;
    }
</style>

<div class="row">
    <div class="col-xs-12">
   @if (TempData["Success"] != null) { 
         <div class="alert alert-success alert-dismissable" id="successAlert">
             @TempData["Success"]
        </div>
        }
        <div class="box box-info EventVM">
            <div class="box-header">
                <h3 class="box-title">Manage Audience</h3>
                <div class="box-tools pull-right">
                    <a href='@( Url.Action("Audience", "Event"))' class="btn btn-info btn-sm">Add Audience</a>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-header">
                <div class="col-xs-6">
                    <div class="input-group input-group-sm">
                        <input id="txtSearchAudience" type="text" class="form-control" placeholder="Search Audience" maxlength="30" data-bind="event:{keypress: $root.ApplyFilterEnter}">
                        <span class="input-group-btn">
                            <button class="btn btn-info btn-flat" type="button" data-bind="click : function() { ApplyFilter()}"><i class="glyphicon glyphicon-search"></i></button>
                        </span>
                    </div>
                </div>
                <div class="col-xs-6">
                </div>

            </div>
            <div class="box-body table-responsive no-padding">
                <table class="table table-hover">
                    <tr>
                        <th style="width: 5%">#</th>
                        <th>Name</th>
                        <th style="width: 15%">Type</th>                       
                        <th style="width: 12%">ActionDate</th>
                        <th style="width: 12%">Action</th>
                    </tr>
                    <!--ko foreach:AudienceList -->
                    <tr>
                        <td data-bind="text:Sno"></td>
                        <td data-bind="text:AudienceName"></td>
                        <td data-bind="text:AudienceType"></td>                        
                        <td data-bind="text:AudienceActionDate"></td>
                        <td>
                            <a data-bind="attr: { 'href': '@Url.Action("EditAudience", "Event")?aid=' + EncryptedAudienceCode }"
                               class="btn btn-info btn-xs">Edit</a> 
                            <button class="btn btn-danger btn-xs" data-toggle="modal" data-target="#myModal" data-bind="click: function(){$root.DeleteAudienceData($data)}">Delete</button>
                        </td>
                    </tr>
                    <!-- /ko -->
                </table>
            </div>
            
            <div id="NoRecord" class="alert text-center" role="alert" style="color: red;display:none;">No record(s) found</div>

            <!-- /.box-body -->

            <div class="box-footer clearfix" id="paging-footer" style="display:none;">
                <div class="col-xs-5">
                    <!--ko text:PageText -->
                    <!-- /ko -->
                </div>
                <div class="col-xs-1 text-center">
                    Page Size
                </div>
                <div class="col-xs-2">
                    <select class="form-control page-size" style="width: 60px; padding: 2px 2px; height: 28px;">
                        <option>10</option>
                        <option>25</option>
                        <option>50</option>
                        <option>100</option>
                    </select>
                </div>
                <div class="col-xs-4" data-bind="visible:PageList().length > 0">
                    <ul class="pagination pagination-sm no-margin pull-right">
                        <li data-bind="css:{'disabled':(PageNumber() == 1)}"><a href="#" data-bind="click : function() { GoToPage(1)}"><i class="fa fa-fw fa-angle-double-left"></i></a></li>
                        <li data-bind="css:{'disabled':(PageNumber() == 1)}"><a href="#" data-bind="click : function() { GoToPage(PageNumber() - 1)}"><i class="fa fa-fw fa-angle-left"></i></a></li>
                        <!--ko foreach:PageList -->
                        <li>
                            <a href="#" data-bind="click : function() { $root.GoToPage(PageNo)},css:{'activePage':(PageNo == $root.PageNumber())}">
                                <!--ko text:PageNo -->
                                <!-- /ko -->
                            </a>
                        </li>
                        <!-- /ko -->
                        <li data-bind="css:{'disabled':(PageNumber() == TotalPages())}"><a href="#" data-bind="click : function() { GoToPage(PageNumber() + 1)}"><i class="fa fa-fw fa-angle-right"></i></a></li>
                        <li data-bind="css:{'disabled':(PageNumber() == TotalPages())}"><a href="#" data-bind="click : function() { GoToPage(TotalPages())}"><i class="fa fa-fw fa-angle-double-right"></i></a></li>
                    </ul>
                </div>
            </div>
            <!-- Modal -->
            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">

                        <div class="modal-header" style="background-color: #D73925; color: white">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Warning</h4>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure to delete audience?</p>
                        </div>
                        <div class="modal-footer">
                            <a class="btn btn-danger" data-dismiss="modal" data-bind="click:$root.DeleteAudience">
                                Yes
                            </a>
                            <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.box -->
    </div>
</div>
<script type="text/javascript">

    var EventVM = function () {
        var self = this;

        /*Paging start*/
        self.PageText = ko.observable();
        self.PageList = ko.observableArray();
        self.TotalPages = ko.observable();
        self.PageSize = ko.observable(10);
        self.PageNumber = ko.observable(1);
        function PageDO(pageNo) {
            var self = this;
            self.PageNo = pageNo;
        };

        self.GoToPage = function (pageNum) {
            if (pageNum > self.TotalPages() || pageNum <= 0 || self.PageNumber() == pageNum ) {
                return ;
            }
            else {
                self.PageNumber(pageNum);
                self.LoadData();
            }

        }
        self.LoadPages = function (totalResults) {
            self.PageList([]);

            self.PageText("Showing " + (totalResults > 0 ?((self.PageNumber() * self.PageSize()) - self.PageSize() + 1) : 0) + " - "
                + ((self.PageNumber() * self.PageSize()) >= totalResults ? totalResults : (self.PageNumber() * self.PageSize()))
                + " of " + totalResults + " events");
            if (totalResults > self.PageSize()) {
                var TotalPages = Math.ceil(totalResults / self.PageSize());
                self.TotalPages(TotalPages);
                if (self.PageNumber() == 1) {
                    self.PageList.push(new PageDO(self.PageNumber()));
                    if (TotalPages >= self.PageNumber() + 1)
                        self.PageList.push(new PageDO(self.PageNumber() + 1));
                    if (TotalPages >= self.PageNumber() + 2)
                        self.PageList.push(new PageDO(self.PageNumber() + 2));
                }
                else if (self.PageNumber() > 1 && self.PageNumber() != TotalPages) {
                    self.PageList.push(new PageDO(self.PageNumber() - 1));
                    self.PageList.push(new PageDO(self.PageNumber()));
                    if (TotalPages >= self.PageNumber() + 1)
                        self.PageList.push(new PageDO(self.PageNumber() + 1));
                }
                else if (self.PageNumber() == TotalPages) {
                    if (self.PageNumber() - 2 >= 1)
                        self.PageList.push(new PageDO(self.PageNumber() - 2));
                    if (self.PageNumber() - 1 >= 1)
                        self.PageList.push(new PageDO(self.PageNumber() - 1));
                    self.PageList.push(new PageDO(self.PageNumber()));
                }
            }
        }

        $(document).delegate('.page-size', 'change', function () {
            self.PageSize($(this).val());
            self.PageNumber(1);
            self.LoadData();
        });

        /*Paging end*/
        self.SearchAudience = ko.observable();
        self.AudienceList = ko.observableArray();
        self.TotalResult = ko.observable(0);
        function EventDO(data) {
            var self = this;
            self.Sno = data.Sno;
            self.AudienceCode = data.AudienceCode;
            self.EncryptedAudienceCode = data.EncryptedAudienceCode;
            self.AudienceName = data.AudienceName;
            self.AudienceType = data.AudienceType;
            self.IsStakeholder = data.IsStakeholder;     
            self.AudienceActionDate = moment(data.ActionDate).format('LL');
        };

        self.ApplyFilter = function () {
            self.SearchAudience($('#txtSearchAudience').val());
            if ($('#txtSearchAudience').val().length > 2 || $('#txtSearchAudience').val().length == 0)
            {
            self.PageNumber(1);
            self.PageSize($('.page-size').val());
            self.LoadData();
            }
        };
        self.ApplyFilterEnter = function (data, event) {
            if ($(event.currentTarget).val().length > 2 || $(event.currentTarget).val().length == 0 )
            {
                if (event.which == 13) {
                    self.PageNumber(1);
                    self.PageSize(10);
                    self.ApplyFilter();
                }
            }
            return true;
        }

        self.LoadData = function () {
            self.AudienceList([]);
            $('#NoRecord').hide();
            $('#paging-footer').show();
            Helper.AjaxCall.GetCall(PublicRelationVD+'/Event/GetAudienceAsync', { 'pageNo': self.PageNumber(), 'pageSize': self.PageSize(), 'AudienceId': null, 'AudienceName': self.SearchAudience() }, function (data) {
                 var TotalResults = (data.Table1)[0].TotalResult;
                self.LoadPages(TotalResults);
                self.TotalResult(TotalResults);
                $.each(data.Table, function (i, v) {
                    var f = new EventDO(v, self);
                    self.AudienceList.push(f);
                });
                self.AudienceList.valueHasMutated();
                if (self.AudienceList().length == 0) {
                    $('#NoRecord').show();
                    $('#paging-footer').hide();
                }
                if($('#successAlert').size() > 0){
                    setTimeout(function(){ 
                        //$('#successAlert').hide(); 
                        $('#successAlert').slideUp();
                    },2000);
                }
                window.scrollTo(0, 0);       
                $('.pagination li a').tooltip('destroy');  

            });
        };

        self.LoadData();

        self.CurrentAudience = ko.observable();
        self.DeleteAudienceData = function (data) {
            self.CurrentAudience(data);
        }
        self.DeleteAudience = function (data) {
            var EncryptedAudienceCode = self.CurrentAudience().EncryptedAudienceCode;
            Helper.AjaxCall.PostCall(PublicRelationVD+'/Event/DeleteAudience', { 'aid': EncryptedAudienceCode },
                function (result) {
                    if (result == 1) {
                        self.LoadData();
                    }
                    else {
                        self.iserror(true);
                        settimeout(function () { self.iserror(false) }, "5000");
                    }
                });
        }
    }
    var EventVMObj = new EventVM();
    $(document).ready(function () {
        ko.applyBindings(EventVMObj, $('.EventVM')[0]);
    })
</script>

